name: (Code) Snyk Code Summary with PR Comment

on:
  pull_request:

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  snyk-code-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Snyk CLI
        uses: snyk/actions/setup@master

      - name: Run Snyk Code scan (SARIF output)
        run: |
          snyk code test --json --sarif > snyk-code-results.sarif || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Generate Snyk Code PR summary
        run: |
          node <<'EOF'
          const fs = require('fs');
          const sarif = JSON.parse(fs.readFileSync('snyk-code-results.sarif', 'utf8'));
          const severityRank = level => ({ error: 2, warning: 1 }[level] || 0);
          const severityIcons = { Critical: '🔴', Medium: '🟠' };

          const repoUrl = process.env.GITHUB_SERVER_URL + '/' + process.env.GITHUB_REPOSITORY;
          const branch = process.env.GITHUB_HEAD_REF || process.env.GITHUB_REF_NAME || 'main';
          const fileIssuesMap = {};

          for (const run of sarif.runs || []) {
            const rules = Object.fromEntries((run.tool.driver.rules || []).map(r => [r.id, r]));
            for (const result of run.results || []) {
              const level = result.level;
              if (!['error', 'warning'].includes(level)) continue;

              const file = result.locations?.[0]?.physicalLocation?.artifactLocation?.uri || 'unknown';
              const startLine = result.locations?.[0]?.physicalLocation?.region?.startLine || '?';
              const rule = rules[result.ruleId] || {};
              const message = rule.shortDescription?.text || result.message?.text || 'No description';
              const helpUrl = rule.helpUri || `https://security.snyk.io/vuln/${result.ruleId}`;

              fileIssuesMap[file] = fileIssuesMap[file] || [];
              fileIssuesMap[file].push({ level, startLine, ruleId: result.ruleId, message, helpUrl });
            }
          }

          let output = '<!-- SNYK_CODE_SUMMARY -->\n';
          output += '## 🧠 Snyk Code Security Issues by File\n\n';

          if (Object.keys(fileIssuesMap).length === 0) {
            output += '_No `error` or `warning` level issues found._\n';
          } else {
            for (const file of Object.keys(fileIssuesMap)) {
              const issues = fileIssuesMap[file].sort((a, b) => severityRank(b.level) - severityRank(a.level));
              const fileLink = `${repoUrl}/blob/${branch}/${file}`;
              output += `### 📄 [${file}](${fileLink})\n`;
              output += `| Severity | Rule | Line | Description |\n`;
              output += `|----------|------|------|-------------|\n`;
              for (const issue of issues) {
                const icon = severityIcons[issue.level] || '';
                output += `| ${icon} ${issue.level.toUpperCase()} | [${issue.ruleId}](${issue.helpUrl}) | ${issue.startLine} | ${issue.message} |\n`;
              }
              output += '\n';
            }
          }

          output += '\n---\n';
          output += `### ℹ️ Notes\n`;
          output += `- Only issues with severity \`error\` or \`warning\` are shown.\n`;
          output += `- File and line links reference the current PR branch.\n`;
          fs.writeFileSync('pr-code-comment.md', output);
          EOF

      - name: Add summary to PR checks tab
        run: cat pr-code-comment.md >> $GITHUB_STEP_SUMMARY

      - name: Create or update PR comment for Snyk Code
        if: github.event_name == 'pull_request'
        run: |
          COMMENT_ID=$(gh pr view "$PR_URL" --json comments -q '.comments[] | select(.body | contains("<!-- SNYK_CODE_SUMMARY -->")) | .id')
          if [ -n "$COMMENT_ID" ]; then
            gh pr comment "$PR_URL" --edit-last --body-file pr-code-comment.md
          else
            gh pr comment "$PR_URL" --body-file pr-code-comment.md
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
