name: Snyk Code Summary with PR Comment

on:
  pull_request:

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  snyk-code-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Install Snyk CLI
        uses: snyk/actions/setup@master

      - name: Run Snyk Code scan
        run: snyk code test --json > snyk-code-results.json || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Generate PR comment summary
        run: |
          node <<'EOF'
          const fs = require('fs');
          const path = require('path');
          const data = JSON.parse(fs.readFileSync('snyk-code-results.json', 'utf8'));
          
          const results = data.runs?.[0]?.results || [];
          const repoUrl = process.env.GITHUB_SERVER_URL + '/' + process.env.GITHUB_REPOSITORY;
          const commit = process.env.GITHUB_SHA;

          const severityRank = { critical: 4, high: 3 };
          const severityIcons = { critical: '🔴', high: '🟠' };
          const outputLines = [];

          const filtered = results.filter(r => {
            const sev = r.partialFingerprints?.severity || 'low';
            return ['critical', 'high'].includes(sev);
          });

          outputLines.push('<!-- SNYK_CODE_SUMMARY -->');
          outputLines.push('## 🛡️ Snyk Code Issues Summary\n');

          if (filtered.length === 0) {
            outputLines.push('_No high or critical severity issues found._\n');
          } else {
            outputLines.push('| Severity | File | Line | Message | Rule ID |');
            outputLines.push('|----------|------|------|---------|---------|');

            for (const issue of filtered) {
              const severity = issue.partialFingerprints?.severity || 'unknown';
              const icon = severityIcons[severity] || '';
              const location = issue.locations?.[0]?.physicalLocation || {};
              const file = location.artifactLocation?.uri || 'unknown';
              const line = location.region?.startLine || 'N/A';
              const message = issue.message?.text?.replace(/\|/g, '\\|') || 'N/A';
              const ruleId = issue.ruleId || 'N/A';

              const fileLink = `${repoUrl}/blob/${commit}/${file}#L${line}`;
              outputLines.push(`| ${icon} ${severity.toUpperCase()} | [${file}](${fileLink}) | ${line} | ${message} | ${ruleId} |`);
            }
          }

          outputLines.push('\n---\n');
          outputLines.push(`ℹ️ Only **high** and **critical** severity issues are shown.`);
          fs.writeFileSync('pr-comment-code.md', outputLines.join('\n'));
          EOF

      - name: Add summary to PR Checks tab
        run: cat pr-comment-code.md >> $GITHUB_STEP_SUMMARY

      - name: Edit or create Snyk Code PR comment
        if: github.event_name == 'pull_request'
        run: |
          COMMENT_ID=$(gh pr view "$PR_URL" --json comments -q '.comments[] | select(.body | contains("<!-- SNYK_CODE_SUMMARY -->")) | .id')
          if [ -n "$COMMENT_ID" ]; then
            gh pr comment "$PR_URL" --edit-last --body-file pr-comment-code.md
          else
            gh pr comment "$PR_URL" --body-file pr-comment-code.md
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
